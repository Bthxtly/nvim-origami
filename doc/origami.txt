*origami.txt*             For NVIM v0.8.0            Last change: 2023 July 28

==============================================================================
Table of Contents                                  *origami-table-of-contents*

1. nvim-origami                                        |origami-nvim-origami-|
  - Features                                  |origami-nvim-origami--features|
  - Installation                          |origami-nvim-origami--installation|
  - Configuration                        |origami-nvim-origami--configuration|
  - Limitations                            |origami-nvim-origami--limitations|
  - Other Folding Plugins        |origami-nvim-origami--other-folding-plugins|
  - Credits                                    |origami-nvim-origami--credits|

==============================================================================
1. nvim-origami                                        *origami-nvim-origami-*

Fold with elegance.

- |origami-features|
- |origami-installation|
- |origami-configuration|
- |origami-limitations|
- |origami-credits|


FEATURES                                      *origami-nvim-origami--features*

- Remember folds across sessions.
- Pause folds while searching, restore folds when done with searching.
- Use `h` at the first non-blank character of a line (or before) to fold.
- Use `l` anywhere on a folded line to unfold it.


INSTALLATION                              *origami-nvim-origami--installation*

>lua
    -- lazy.nvim
    {
        "chrisgrieser/nvim-origami",
        event = "BufReadPost", -- later or key would prevent saving folds
        opts = true, -- needed even when using default config
    },
    
    -- packer
    use {
        "chrisgrieser/nvim-origami",
        config = function () 
            require("origami").setup ({}) -- setup call needed
        end,
    }
<


CONFIGURATION                            *origami-nvim-origami--configuration*

>lua
    -- default values
    require("origami").setup ({
        keepFoldsAcrossSessions = true,
        pauseFoldsOnSearch = {
            enabled = true,
            forwardKey = "/",
            backwardKey = "?",
        },
    })
<

>lua
    vim.keymap.set("n", "h", function() require("origami").h() end, { desc = "Origami h" })
    vim.keymap.set("n", "l", function() require("origami").l() end, { desc = "Origami l" })
<


LIMITATIONS                                *origami-nvim-origami--limitations*

Running a formatter, which changes something inside a fold can result in
unintentionally opening that fold. This plugin does not have a feature yet to
prevent that.


OTHER FOLDING PLUGINS            *origami-nvim-origami--other-folding-plugins*

- fold-cycle.nvim <https://github.com/jghauser/fold-cycle.nvim>
- nvim-ufo <https://github.com/kevinhwang91/nvim-ufo>


CREDITS                                        *origami-nvim-origami--credits*

**About Me** In my day job, I am a sociologist studying the social mechanisms
underlying the digital economy. For my PhD project, I investigate the
governance of the app economy and how software ecosystems manage the tension
between innovation and compatibility. If you are interested in this subject,
feel free to get in touch.

**Blog** I also occasionally blog about vim: Nano Tips for Vim
<https://nanotipsforvim.prose.sh>

**Profiles** - reddit <https://www.reddit.com/user/pseudometapseudo> - Discord
<https://discordapp.com/users/462774483044794368/> - Academic Website
<https://chris-grieser.de/> - Twitter <https://twitter.com/pseudo_meta> -
Mastodon <https://pkm.social/@pseudometa> - ResearchGate
<https://www.researchgate.net/profile/Christopher-Grieser> - LinkedIn
<https://www.linkedin.com/in/christopher-grieser-ba693b17a/>

**Buy Me a Coffee**

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
