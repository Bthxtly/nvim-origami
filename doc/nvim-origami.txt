*nvim-origami.txt*            For Neovim            Last change: 2025 March 31

==============================================================================
Table of Contents                             *nvim-origami-table-of-contents*

1. nvim-origami                                   |nvim-origami-nvim-origami-|
  - Table of Content             |nvim-origami-nvim-origami--table-of-content|
  - Features                             |nvim-origami-nvim-origami--features|
  - Installation                     |nvim-origami-nvim-origami--installation|
  - Configuration                   |nvim-origami-nvim-origami--configuration|
  - Limitations                       |nvim-origami-nvim-origami--limitations|
  - Other useful folding plugins|nvim-origami-nvim-origami--other-useful-folding-plugins|
  - Credits                               |nvim-origami-nvim-origami--credits|
  - About the developer       |nvim-origami-nvim-origami--about-the-developer|
2. Links                                                  |nvim-origami-links|

==============================================================================
1. nvim-origami                                   *nvim-origami-nvim-origami-*



_Foldwith relentless elegance._

A collection of Quality-of-life features related to folding.




TABLE OF CONTENT                 *nvim-origami-nvim-origami--table-of-content*

- |nvim-origami-features|
- |nvim-origami-installation|
- |nvim-origami-configuration|
- |nvim-origami-limitations|
- |nvim-origami-other-useful-folding-plugins|
- |nvim-origami-credits|
- |nvim-origami-about-the-developer|


FEATURES                                 *nvim-origami-nvim-origami--features*

1. Remember folds across sessions. `requires nvim-ufo`
2. Pause folds while searching, restore folds when done with searching.
(Normally, folds are opened when you search for text inside them, and _stay_
open afterward.)
3. Add line count to the `foldtext`, preserving the syntax highlighting of the
line (requires Treesitter parser for the language). `incompatible with    nvim-ufo`
4. Overload the `h` key which will fold a line when used one the first non-blank
character of (or before). And overload the `l` key, which will unfold a line
when used on a folded line. This allows you to ditch `zc`, `zo`, and
`za`, `h` and `l` are all you need.
5. Automatically fold comments and/or imports. Requires `vim.lsp.foldexpr` from
nvim 0.11. `incompatible with nvim-ufo`


  [!NOTE] This plugin does **not** provide a `foldmethod`. For this plugin to
  work, you either have to set one of on your own
  <https://www.reddit.com/r/neovim/comments/1jmqd7t/sorry_ufo_these_7_lines_replaced_you/>,
  or use plugin providing folding information, such as nvim-ufo
  <http://github.com/kevinhwang91/nvim-ufo>.

INSTALLATION                         *nvim-origami-nvim-origami--installation*

>lua
    -- lazy.nvim
    {
        "chrisgrieser/nvim-origami",
        event = "VeryLazy",
        opts = {}, -- needed even when using default config
    },
    
    -- packer
    use {
        "chrisgrieser/nvim-origami",
        config = function() require("origami").setup({}) end, -- setup call needed
    }
<


CONFIGURATION                       *nvim-origami-nvim-origami--configuration*

>lua
    -- default settings
    require("origami").setup {
        -- requires `nvim-ufo`
        keepFoldsAcrossSessions = package.loaded["ufo"] ~= nil,
    
        pauseFoldsOnSearch = true,
    
        -- incompatible with `nvim-ufo`
        foldtextWithLineCount = {
            enabled = package.loaded["ufo"] == nil,
            template = "   %s lines", -- `%s` gets the number of folded lines
        },
    
        foldKeymaps = {
            setup = true, -- modifies `h` and `l`
            hOnlyOpensOnFirstColumn = false,
        },
    
        -- incompatible with `nvim-ufo`
        autoFold = {
            enabled = false,
            kinds = { "comment", "imports" }, ---@type lsp.FoldingRangeKind[]
        },
    }
<

If you use other keys than `h` and `l` for vertical movement, set
`setupFoldKeymaps = false` and map the keys yourself:

>lua
    vim.keymap.set("n", "<Left>", function() require("origami").h() end)
    vim.keymap.set("n", "<Right>", function() require("origami").l() end)
<


LIMITATIONS                           *nvim-origami-nvim-origami--limitations*

Many formatting plugins open all your folds
<https://www.reddit.com/r/neovim/comments/164gg5v/preserve_folds_when_formatting/>
and unfortunately, there is nothing this plugin can do about it. The only two
tools I am aware of that are able to preserve folds are the efm-language-server
<https://github.com/mattn/efm-langserver> and conform.nvim
<https://github.com/stevearc/conform.nvim>.


OTHER USEFUL FOLDING PLUGINS*nvim-origami-nvim-origami--other-useful-folding-plugins*

- fold-cycle.nvim <https://github.com/jghauser/fold-cycle.nvim>
- nvim-ufo <https://github.com/kevinhwang91/nvim-ufo>


CREDITS                                   *nvim-origami-nvim-origami--credits*

- @magnusriga <https://github.com/neovim/neovim/pull/27217#issuecomment-2631614344>
    for a more performant implementation of fold text with highlighting.


ABOUT THE DEVELOPER           *nvim-origami-nvim-origami--about-the-developer*

In my day job, I am a sociologist studying the social mechanisms underlying the
digital economy. For my PhD project, I investigate the governance of the app
economy and how software ecosystems manage the tension between innovation and
compatibility. If you are interested in this subject, feel free to get in
touch.

I also occasionally blog about vim: Nano Tips for Vim
<https://nanotipsforvim.prose.sh>

- Website <https://chris-grieser.de/>
- Mastodon <https://pkm.social/@pseudometa>
- ResearchGate <https://www.researchgate.net/profile/Christopher-Grieser>
- LinkedIn <https://www.linkedin.com/in/christopher-grieser-ba693b17a/>



==============================================================================
2. Links                                                  *nvim-origami-links*

1. *@magnusriga*: 

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
